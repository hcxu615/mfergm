{
    "contents" : "#' Generate networks and estimates parameters \n#' \n#' This function simulates \\code{nsims} networks, and \n#' compares estimates using \n#' the ergm routines, the Chatterje-Diaconis 2013 mean-field\n#' and the more general mean-field approximation. The model\n#' is a model with edges and 2-stars.\n#' \n#' @param theta true parameters vector\n#' @param n size of the network\n#' @param nsims number of simulated networks to estimate\n#' @param sim.seed seed for the random number generator\n\nsimulate.model1 <- function(theta, n = 10, nsims = 2, sim.seed = 1977) {\n  \n  library(mfergm)\n  set.seed(sim.seed) # seed for the simulations\n  #n <- 100  # size of the network\n  #nsims <- 2 # number of simulations\n  x <- rnorm(n,0,1) # attributes\n  p <- c(1,2) # parameters location\n  q <- 1  # columns of x\n  \n  # change stats to use\n  dt <- matrix(0, ncol = p[2], nrow = 2)\n  dt[,1] <- c(1,1)\n  dt[,2] <- c(1,1)\n  \n  #theta = c(-2.0,3.0) # true parameters\n  tol = 0.000001 # tolerance for mf\n  \n  # create network from random erdos renyi\n  cat(\"initializing network for simulations\")\n  g <- initialize.network(theta, n, directed = FALSE)\n  \n  # simulate nsims networks\n  cat(\"\\n\")\n  cat(paste(\"generate \", nsims, \" networks\", \"\\n\"))\n  g0 <- simulate(~edges+kstar(2), \n                 nsim = nsims, \n                 coef = theta*c(1,1/n ),\n                 basis = g,\n                 control=control.simulate(\n                   MCMC.burnin=10000000,\n                   MCMC.interval=10000)\n  )\n  \n  # observed statistics for the sample\n  tobs <- data.frame(matrix(NA, ncol = 2, nrow = nsims))\n  names(tobs) <- c(\"edges\", \"kstar(2)\")\n  for (i in 1:nsims) {\n    formula <- g0[[i]] ~ edges + kstar(2)\n    #tobs[i,] <- summary(formula)/(c((n^2)/2, n^3))  \n    tobs[i,] <- summary(formula)/(c((n^2)/2, (n^3)/2 ))  \n  }\n  \n  # initialize data.frame with estimation results\n  estim.table<- data.frame(matrix(NA, nrow = nsims, ncol = 6))\n  names(estim.table) <- c(\"ergm\", \"ergm\", \n                          \"ChatterjeDiaconis\", \"ChatterjeDiaconis\", \n                          \"meanfield\", \"meanfield\")\n  \n  # estimate using ergm routines\n  cat(paste(\"estimating using ergm package\", \"\\n\"))\n  for (i in 1:nsims) {\n    cat(\"***********************************\\n\")\n    cat(paste(\"estimating sample\" ,i, \"\\n\"))\n    cat(\"***********************************\\n\")\n    #set.seed(1977)\n    formula <- g0[[i]] ~ edges + kstar(2)\n    m1ergm <- ergm(formula, estimate = \"MLE\",\n                   control=control.ergm(\n                     MCMC.burnin=100000,\n                     MCMC.interval=1000,\n                     init = theta*c(1,1/n ))\n    )\n    est.params <- summary(m1ergm)$coef\n    estim.table[i,1:2] <- c(est.params[1:2,1])\n  }\n  \n  # estimate using chatterjee-diaconis\n  library(optimx)\n  for (i in 1:nsims) {\n    pars <- c(-3,2)\n    cd.est <- optimx(pars, loglik.model1, method = \"Nelder-Mead\", tobs = tobs[i,])\n    estim.table[i,3:4] <- c(cd.est[1:2])\n    \n  }\n  \n  data <- list(g0,theta,n,nsims,tol,dt, tobs, estim.table)\n  names(data) <- c(\"sample\", \"params\", \"n\", \"nsims\", \"tol\", \"changestats\", \"stats0\", \"estimates\")\n  return(data)\n  \n}",
    "created" : 1444430305355.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3623143268",
    "id" : "6AE6F5E5",
    "lastKnownWriteTime" : 1444475344,
    "path" : "C:/Users/amele1/Dropbox/mfergm/programs/mfergm/R/simulate.model1.R",
    "project_path" : "R/simulate.model1.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}